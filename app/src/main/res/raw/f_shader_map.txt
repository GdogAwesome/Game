precision highp float;

uniform sampler2D u_Texture;
uniform sampler2D u_NormalMap;
uniform vec3 u_LightPos;
uniform int u_AnimFrame;

varying vec2 v_TexCoordinate;
varying vec3 v_Position;



void main()
{

         vec3 normal = texture2D(u_NormalMap, v_TexCoordinate).rgb;
         normal = normalize(normal * 2.0 -1.0);

             vec4 color = texture2D(u_Texture,v_TexCoordinate);
             // ambient
             vec3 ambient = 0.7 * color.xyz;
             // diffuse
             vec3 lightDir = normalize(u_LightPos - v_Position);
             float diff = max(dot(lightDir, normal), 0.0);
             vec3 diffuse = diff * color.xyz;
             // specular
             vec3 viewDir = normalize(u_LightPos - v_Position);//this is wrong but gave a satisfactory result so I will fix it later, maybe...
             vec3 reflectDir = reflect(-lightDir, normal);
             vec3 halfwayDir = normalize(lightDir + viewDir);
             float spec = pow(max(dot(normal, halfwayDir), 0.0), 32.0);

             vec3 specular = vec3(0.15) * spec;


	       gl_FragColor = vec4(ambient + diffuse + specular, color.w);//vec4(texture2D(u_Texture, v_TexCoordinate).rgb, texture2D(u_Texture, v_TexCoordinate));

}